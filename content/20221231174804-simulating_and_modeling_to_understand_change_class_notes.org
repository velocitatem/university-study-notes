:PROPERTIES:
:ID:       a66d2149-cb01-4124-bcc8-c5e9f1669d3d
:END:
#+title: Simulating and Modeling to Understand Change - Class Notes
#+HTML_HEAD: <link rel="stylesheet" href="https://alves.world/org.css" type="text/css">
#+HTML_HEAD: <style type="text/css" media="print"> body { visibility: hidden; display: none } </style>
#+OPTIONS: toc:2
#+HTML_HEAD: <script src="https://alves.world/tracking.js" ></script>
#+HTML_HEAD: <script src="anti-cheat.js"></script>
#+HTML: <script data-name="BMC-Widget" data-cfasync="false" src="https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js" data-id="velocitatem24" data-description="Support me on Buy me a coffee!" data-message="" data-color="#5F7FFF" data-position="Right" data-x_margin="18" data-y_margin="18"></script>
#+HTML: <script>setTimeout(() => {alert("Finding this useful? Consider buying me a coffee! Bottom right cornner :) Takes just a few seconds")}, 60*1000);_paq.push(['trackEvent', 'Exposure', 'Exposed to beg']);</script>





#+HTML: <footer style="height: 20vh;"></footer>


* Introduction
** Systems
# example of a system is a computer sytem
# it is a group of objects trying to achieve a goal
# two enivronments: inside and outside
# In a system we have entities/objects
# Each entity has attributes or can do activities
# a state can be defined both for a system or entity
# other examples of a system: forest, restaurant
# overall key components: entity, attribute, activity, state, event
# A system can be discrete or continuous people in a bank, water levels
A system is a group of objects that work together to achieve a goal. It consists of two environments: the inside and the outside. Each entity in the system has attributes or can do activities. A state can be defined for the system or components of the system. Examples of systems include computer systems, forests, restaurants, and banks. The key components of a system are the entities, attributes, activities, states, and events. Systems can be either discrete or continuous, such as the people in a bank or the water levels in a river.
** Models
# A model is an abstraction of some real life situation
# the more variables the higher the complexity
# This is determined by the simplicity or realism of a model [define]
A model is an abstraction of a real-life situation, where the complexity of the model increases with the number of variables that are taken into account. The simplicity or realism of a model is determined by how closely it reflects the actual situation it is representing.
** Simulation
# A simulation can be done for almost any system given some model.
# stochastic simulation: uses randomness to predict events
# deterministic simulation: [define]
# example simulation: restaurant/shop - has two attributes: customers, employees. We have to make some assumptions.
# Why simulate? it is cheaper and it is faster than real life, replicable, safer, ethical and legal
# deterministic vs stochastic simulations:

Simulation is a great tool to use when attempting to gain insights into the behavior of complex systems. Stochastic simulations rely on randomness to predict events, while deterministic simulations are based on predetermined inputs. For example, a restaurant/shop system can be simulated by making assumptions about the number of customers and employees in the system. Simulations are advantageous because they are cheaper, faster, replicable, safer, ethical, and legal when compared to real-life experiments. The decision between using a stochastic or deterministic simulation depends on the circumstances and the desired outputs.
*** Deterministic
# deterministic - physics, there is no probability no variable change.
# example: gaining and losing followers on an account
# [generate python code to simulate an account gaining and losing followers]
In physics, determinism is the idea that all events are predetermined. There is no room for randomness or probability, as all changes are predetermined by the laws of nature. An example of this is an account gaining and losing followers, which is predetermined by the actions of the account holder. To simulate this process in Python, one could create a loop that tracks the number of followers gained and lost over time and stores it in a variable. This variable could then be used to print out the number of followers at any given time.
*** Stochastic
# stochastic - has randomness, uses random variables
Stochastic simulation is a modelling technique which incorporates randomness, making use of random variables to generate a variety of possible outcomes. It is used for analysing complex systems in which the effects of randomness cannot be predicted deterministically, and thus provides a useful tool for predicting and understanding the behaviour of such systems.
*** Statics vs Dynamic
# Static: there is no time variable
# Dymanic: there is a time variable
Simulations are typically classified as either static or dynamic. In a static simulation, there is no time variable; the system is unchanging and the same set of conditions is used throughout the simulation. In a dynamic simulation, time is a variable, meaning that the system is constantly changing and the conditions of the simulation can evolve over time.
** A Seed
# it can be any number
# allows us to replicate semi-random experiments
A seed is any number that can be used to replicate semi-random experiments and simulations. It allows for the same experiment to be repeated in the same way, with the same conditions and results, by using the same seed each time. This makes it easy to compare results from different experiments and simulations, as the same starting point can be replicated.

* Python Programming for Simulations and Models
* Random Numbers Generation
* Random Variable Simulation
* Monte Carlo Simulation
* Discrete Events Simulation
* Model Building
* Regression Models
* Classification Models
